#coding:utf-8
#
# id:           bugs.core_5119
# title:        Support autocommit mode in SET TRANSACTION statement
# decription:   
#                  Test starts transaction by issuing ISQL command with 'auto commit' clause and check then
#                  whether transaction data are written in the table, despite of final rollback.
#                
# tracker_id:   CORE-5119
# min_versions: ['4.0.0']
# versions:     4.0
# qmid:         None

import pytest
from firebird.qa import db_factory, isql_act, Action

# version: 4.0
# resources: None

substitutions_1 = []

init_script_1 = """"""

db_1 = db_factory(sql_dialect=3, init=init_script_1)

test_script_1 = """
    --  Checked on: 4.0.0.32371
    recreate table test(id int generated by default as identity, tx int default current_transaction);
    commit;
    set transaction auto commit;
    insert into test default values;
    insert into test default values;
    insert into test default values;
    rollback;
    set count on;
    set list on;
    select id, rank()over(order by tx) tx from test;
"""

act_1 = isql_act('db_1', test_script_1, substitutions=substitutions_1)

expected_stdout_1 = """
    ID                              1
    TX                              1
    ID                              2
    TX                              2
    ID                              3
    TX                              3
    Records affected: 3
"""

@pytest.mark.version('>=4.0')
def test_1(act_1: Action):
    act_1.expected_stdout = expected_stdout_1
    act_1.execute()
    assert act_1.clean_stdout == act_1.clean_expected_stdout

